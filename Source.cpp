
#include <iostream>
using namespace std;

int main()
{   // объявляем и инициализируем массивы

	float b[8] = { 243, 1, 79, 1, 133, 37, 31, 2 };
	float c[4] = {}; // инициализируем массив нулями
	float z[4]; // инициализируем массив нулями
	float et[2] = { 25, -53 };
	float *bg;
	bg = b;
	float ef = 0; // начальное значение фактического сигнала управления
	float ed; // разность между требуемым сигналом и фактическим
	float k = 0.1; // точность обучения   
	float ef1;
	float ef2;
	int r = 0;
	int n = 0;
	int h = 0;


	while (r < 2) // 
	{
		for (int i = 0; i < 2; i++) // 
		{
			for (int i = 0; i < 4; i++) // суммируем все произведения b на c, и  находим фактический сигнал управления. 
			{
				ef = ef + (*bg * c[i]);
				bg += 1; // перемещаем указатель на следующий элемент массива
				//cout << "ef = " << ef << endl;
			}


			ed = et[i] - ef;  // находим разность межу требуемым сигналом и полученным фактическим
			ef = 0;			  // приравниваем ноль еф
			if (abs(ed) <= abs(k)) //  
			{
				r = r + 1;// r увеличивается на единицу, если "ед" меньше "к".
				if (bg == (b + 8))// сравниваем по последнему адресу элемента массива
				{
					bg = b;// присваиваем указателю адрес первого элемента массива b[8]
				}

			}

			else
			{
				r = 0;  // 
				if (bg == (b + 4) || bg == (b + 8))// сравниваем по последнему адресу элемента массива
				{
					bg = (bg - 4);// передвигаем указатель на 4 элемента назад
					//cout << "*bg = " << *bg  << endl;
				}

				for (int i = 0; i < 4; i++)
				{
					z[i] = ed * *bg;
					h = h + (*bg * *bg);
					bg += 1;

				}
				if (bg == (b + 8))// сравниваем по последнему адресу элемента массива
				{
					bg = b;// присваиваем указателю адрес первого элемента м
				}

				for (int i = 0; i < 4; i++) // ???
				{
					z[i] = z[i] / h;
					c[i] = c[i] + z[i];				
					//cout << "d = " << d << endl;???
				}


				n = n + 1; // подсчитываем и выводим на экран число шагов обучения

				h = 0;
			}

			cout << "r = " << r << endl; // выводим на экран для ознакомления значения r

		}

	}
	
	ef1 = (b[0] * c[0]) + (b[1] * c[1]) + (b[2] * c[2]) + (b[3] * c[3]);  //выводим результаты на консоль
	ef2 = (b[4] * c[0]) + (b[5] * c[1]) + (b[6] * c[2]) + (b[7] * c[3]);  //выводим результаты на консоль
	cout << "ef1 = " << ef1 << endl;
	cout << "ef2 = " << ef2 << endl;
	
	cout << "c0 = " << c[0] << endl;
	cout << "c1 = " << c[1] << endl;
	cout << "c2 = " << c[2] << endl;
	cout << "c3 = " << c[3] << endl;
	cout << "ed < k = " << ed << endl;
	cout << "n = " << n << endl;


	return 0;
}



	

	























